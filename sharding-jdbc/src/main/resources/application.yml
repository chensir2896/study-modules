server:
  port: 80

mybatis:
  config-location: "classpath:mybatis/mybatis-config.xml"

sharding:
  jdbc:
    datasource:
      names: db-test0,db-test1,db-test2
      db-test0:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        jdbc-url: jdbc:mysql://192.168.6.21:3306/test?useUnicode=true&characterEncoding=utf8&tinyInt1isBit=false&useSSL=false&serverTimezone=GMT
        username: root
        password: "/Akk2pyqQ8ohJN8tOmGwdPr64BNxG/hnjXZqZrp2d7X8BNk1:"
        maxPoolSize: 2
      db-test1:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        jdbc-url: jdbc:mysql://192.168.6.21:3306/test2?useUnicode=true&characterEncoding=utf8&tinyInt1isBit=false&useSSL=false&serverTimezone=GMT
        username: root
        password: "/Akk2pyqQ8ohJN8tOmGwdPr64BNxG/hnjXZqZrp2d7X8BNk1:"
        maxPoolSize: 5
      db-test2:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        jdbc-url: jdbc:mysql://192.168.6.21:3306/test3?useUnicode=true&characterEncoding=utf8&tinyInt1isBit=false&useSSL=false&serverTimezone=GMT
        username: root
        password: "/Akk2pyqQ8ohJN8tOmGwdPr64BNxG/hnjXZqZrp2d7X8BNk1:"
        maxPoolSize: 5
    config:
      masterslave: # 配置读写分离
        load-balance-algorithm-type: random  # 配置从库选择策略，提供轮询与随机，这里选择用轮询//random 随机 //round_robin 轮询
        name: db1s2
        master-data-source-name: db-test0
        slave-data-source-names: db-test1,db-test2
    props: # 开启SQL显示，默认值: false，注意：仅配置读写分离时不会打印日志！！！
      show: true

#   分库分表的配置
#  #分库策略--对那个字段进行分库
#  sharding.jdbc.config.sharding.default-database-strategy.inline.sharding-column=user_id
#  #分库对user_id % 2进行分库选择
#  sharding.jdbc.config.sharding.default-database-strategy.inline.algorithm-expression=ds$->{user_id % 2}
#
#  #分表策略--ds$->{0..1}.t_order_$->{0..1}代表是那个库下面的那个表
#  sharding.jdbc.config.sharding.tables.t_order.actual-data-nodes=ds$->{0..1}.t_order_$->{0..1}
#  #分表策略--对那个字段进行分表
#  sharding.jdbc.config.sharding.tables.t_order.table-strategy.inline.sharding-column=order_id
#  #分表的表达式
#  sharding.jdbc.config.sharding.tables.t_order.table-strategy.inline.algorithm-expression=t_order_$->{order_id % 2}
#  #分表对应的字段名
#  sharding.jdbc.config.sharding.tables.t_order.key-generator-column-name=order_id